server:
  port: 7070
  front:
    origin-url: ${FRONT_ORIGIN_URL}

spring:
  config:
    activate:
      on-profile: dev

  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        show_sql: true
        format_sql: true
        use_sql_comments: true
        default_batch_fetch_size: 5
        event:
          merge:
            entity_copy_observer: allow
    database: mysql
  datasource:
    url: jdbc:mysql://localhost:3306/interior?useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: 1234567
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  flyway:
    user: root
    password: 1234567
    url: jdbc:mysql://localhost:3306/interior?useSSL=false&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    redis:
      host: localhost
      port: 6379
      database: 0

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
      auth-code-expiration-millis: 1800000  # 30 * 60 * 1000 == 30분

logging:
  pattern:
    console: "[%d{HH:mm:ss.SSS}][%-5level][%logger.%method:line%line] - %msg%n"
    file: "[%d{yyyy-MM-dd HH:mm:ss.SSS}][%-5level][%logger.%method:line%line] - %msg%n"
  level:
    com:
      zaxxer:
        hikari: debug
        HikariConfig: debug
        HikariDataSource: debug
    root: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  file:
    name: /app/logs/server.log
  rollingpolicy:
    max-file-size: 10MB
    max-history: 7
    total-size-cap: 50MB
  appenders:
    file:
      type: ch.qos.logback.core.FileAppender
      file: ${logging.file.path}/${logging.file.name}
      encoder:
        pattern: ${logging.pattern.file}
  logback:
    rollingpolicy:
      file-name-pattern: "/app/logs/server.%d{yyyy-MM-dd}.%i.log"

slack:
  token: ${SLACK_BOT_TOKEN}
  channel:
    monitor:
      error: '#dev-백앤드-알림'
      new-user: '#dev-백앤드-알림'
      new-company: '#dev-백앤드-알림'
      new-business: '#dev-백앤드-알림'

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health

jwt:
  secret-key: ${JWT_SECRET_KEY}

---

server:
  port: 7070
  front:
    origin-url: ${FRONT_ORIGIN_URL}

spring:
  config:
    activate:
      on-profile: prod

  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        show_sql: true
        format_sql: true
        use_sql_comments: true
        default_batch_fetch_size: 5
    database: mysql
  datasource:
    url: jdbc:mysql://database:3306/interior?useSSL=false&allowPublicKeyRetrieval=true
    username: root
    password: 1234567
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  flyway:
    user: root
    password: 1234567
    url: jdbc:mysql://database:3306/interior?useSSL=false&allowPublicKeyRetrieval=true
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    redis:
      host: redis
      port: 6379
      database: 0

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
      auth-code-expiration-millis: 1800000  # 30 * 60 * 1000 == 30분

logging:
  pattern:
    console: "[%d{HH:mm:ss.SSS}][%-5level][%logger.%method:line%line] - %msg%n"
    file: "[%d{yyyy-MM-dd HH:mm:ss.SSS}][%-5level][%logger.%method:line%line] - %msg%n"
  level:
    root: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  file:
    name: /app/logs/server.log
  rollingpolicy:
    max-file-size: 10MB
    max-history: 7
    total-size-cap: 50MB
  appenders:
    file:
      type: ch.qos.logback.core.FileAppender
      file: ${logging.file.path}/${logging.file.name}
      encoder:
        pattern: ${logging.pattern.file}
  logback:
    rollingpolicy:
      file-name-pattern: "/app/logs/server.%d{yyyy-MM-dd}.%i.log"

slack:
  token: ${SLACK_BOT_TOKEN}
  channel:
    monitor:
      error: '#백앤드-알림'
      new-user: '#신규-고객-등록'
      new-company: '#신규-사업체-등록'
      new-business: '#신규-사업-등록'

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health

jwt:
  secret-key: ${JWT_SECRET_KEY}

---